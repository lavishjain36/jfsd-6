Java to Database connectivity->
1.Load the Driver
2.Establish connection
3.Create statement->SQL queries->

4.Execute queries
5.Close all the objects.

Why MongoDB?
What is a document?
What is a collection?
MongoDB vs MySQL
creation of database, collections, documents
find - query & projection
use of operators in find() query


NOSQL->



Mongo DB Local->
Mongo compass ->To communicate to Mongo server


Mongo =>Mongo Atlas->Cloud 





Switch database->
use databasename;

list of available dbs:
show dbs;

Syntax:
creating->
db.collectioname.insertOne(
    {field:value1},
    {field:value2},
    {field:value3},
)
db.collectioname.insertMany(
    {field:value1},
    {field:value2},
    {field:value3},
)
To create Collection->Table
db.createCollection("collectionanme");



To read and get any data ->
find()->

updateOne
or
updateMany

deleteOne











https://www.mongodb.com/products/tools/compass
https://www.mongodb.com/try/download/shell
https://www.mongodb.com/try/download/community






Microsoft Windows [Version 10.0.19045.4170]
(c) Microsoft Corporation. All rights reserved.

C:\Users\Digital Suppliers>mongosh
Current Mongosh Log ID: 660e57910c05a9929f9f9909
Connecting to:          mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.2.2
Using MongoDB:          6.0.6
Using Mongosh:          2.2.2

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting
   2024-03-28T17:36:22.846+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

test> show dbs;
admin       40.00 KiB
config      72.00 KiB
library     72.00 KiB
local       88.00 KiB
reactivedb  80.00 KiB
test> use library
switched to db library
library> use employees;
switched to db employees
employees> db.createCollection("employeedata")
{ ok: 1 }
employees> db.employeedata.insertMany([
... {empid:1,name:"Lavish",department:"Development",position:"Sr. Developer Lead",salary:10000},
... {empid:2,name:"Dhanush",department:"HR",position:"HR Manager",salary:8000},
... {empid:3,name:"Kartik",department:"Finance",position:"Finanical Analyst",salary:13000},
... {empid:4,name:"Jenny",department:"Engineering",position:"Software Engineer",salary:7000}
... ])
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('660e5bbe0c05a9929f9f990a'),
    '1': ObjectId('660e5bbe0c05a9929f9f990b'),
    '2': ObjectId('660e5bbe0c05a9929f9f990c'),
    '3': ObjectId('660e5bbe0c05a9929f9f990d')
  }
}
employees> db.employeedata.find()
[
  {
    _id: ObjectId('660e5bbe0c05a9929f9f990a'),
    empid: 1,
    name: 'Lavish',
    department: 'Development',
    position: 'Sr. Developer Lead',
    salary: 10000
  },
  {
    _id: ObjectId('660e5bbe0c05a9929f9f990b'),
    empid: 2,
    name: 'Dhanush',
    department: 'HR',
    position: 'HR Manager',
    salary: 8000
  },
  {
    _id: ObjectId('660e5bbe0c05a9929f9f990c'),
    empid: 3,
    name: 'Kartik',
    department: 'Finance',
    position: 'Finanical Analyst',
    salary: 13000
  },
  {
    _id: ObjectId('660e5bbe0c05a9929f9f990d'),
    empid: 4,
    name: 'Jenny',
    department: 'Engineering',
    position: 'Software Engineer',
    salary: 7000
  }
]
employees> db.employeedata.findOne({name:"Lavish"})
{
  _id: ObjectId('660e5bbe0c05a9929f9f990a'),
  empid: 1,
  name: 'Lavish',
  department: 'Development',
  position: 'Sr. Developer Lead',
  salary: 10000
}
employees> db.employeedata.updateOne(
... {name:"Lavish"},
... {$set:{salary:18000}}
... )
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
employees> db.employeedata.find()
[
  {
    _id: ObjectId('660e5bbe0c05a9929f9f990a'),
    empid: 1,
    name: 'Lavish',
    department: 'Development',
    position: 'Sr. Developer Lead',
    salary: 18000
  },
  {
    _id: ObjectId('660e5bbe0c05a9929f9f990b'),
    empid: 2,
    name: 'Dhanush',
    department: 'HR',
    position: 'HR Manager',
    salary: 8000
  },
  {
    _id: ObjectId('660e5bbe0c05a9929f9f990c'),
    empid: 3,
    name: 'Kartik',
    department: 'Finance',
    position: 'Finanical Analyst',
    salary: 13000
  },
  {
    _id: ObjectId('660e5bbe0c05a9929f9f990d'),
    empid: 4,
    name: 'Jenny',
    department: 'Engineering',
    position: 'Software Engineer',
    salary: 7000
  }
]
employees>
{ acknowledged: true, deletedCount: 0 }
employees>

employees> db.employeedata.find()
[
  {
    _id: ObjectId('660e5bbe0c05a9929f9f990a'),
    empid: 1,
    name: 'Lavish',
    department: 'Development',
    position: 'Sr. Developer Lead',
    salary: 18000
  },
  {
    _id: ObjectId('660e5bbe0c05a9929f9f990b'),
    empid: 2,
    name: 'Dhanush',
    department: 'HR',
    position: 'HR Manager',
    salary: 8000
  },
  {
    _id: ObjectId('660e5bbe0c05a9929f9f990c'),
    empid: 3,
    name: 'Kartik',
    department: 'Finance',
    position: 'Finanical Analyst',
    salary: 13000
  },
  {
    _id: ObjectId('660e5bbe0c05a9929f9f990d'),
    empid: 4,
    name: 'Jenny',
    department: 'Engineering',
    position: 'Software Engineer',
    salary: 7000
  }
]
employees> db.employeedata.deleteOne({name:"Kartik"});
{ acknowledged: true, deletedCount: 1 }
employees> db.employeedata.find()
[
  {
    _id: ObjectId('660e5bbe0c05a9929f9f990a'),
    empid: 1,
    name: 'Lavish',
    department: 'Development',
    position: 'Sr. Developer Lead',
    salary: 18000
  },
  {
    _id: ObjectId('660e5bbe0c05a9929f9f990b'),
    empid: 2,
    name: 'Dhanush',
    department: 'HR',
    position: 'HR Manager',
    salary: 8000
  },
  {
    _id: ObjectId('660e5bbe0c05a9929f9f990d'),
    empid: 4,
    name: 'Jenny',
    department: 'Engineering',
    position: 'Software Engineer',
    salary: 7000
  }
]
employees> db.employeedata.find({department:"HR"})
[
  {
    _id: ObjectId('660e5bbe0c05a9929f9f990b'),
    empid: 2,
    name: 'Dhanush',
    department: 'HR',
    position: 'HR Manager',
    salary: 8000
  }
]
------
   The server generated these startup warnings when booting
   2024-03-28T17:36:22.846+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------ is not recognized as an internal or external command,
operable program or batch file.
test>