import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);
        
        //row number 
        int rows=sc.nextInt();//5
      
      
      //min->nested for loop ->iteration i=1 j will run for 5 times->1
      for(int i=1;i<=rows;i++){
          for(int j=1;j<=i;j++){
              System.out.print("* ");
          }
          System.out.println();//cursor will move to next line
      }
    }
}

// it will triangle pattern->we will have same number of elements in columns as row number 

import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);
        
        //row number 
        int rows=sc.nextInt();//5
      
      
      //min->nested for loop ->iteration i=1 j will run for 5 times->1
      for(int i=1;i<=rows;i++){
          for(int j=1;j<=i;j++){
              System.out.print(i+" ");
          }
          System.out.println();//cursor will move to next line
      }
    }
}

// it will triangle pattern->we will have same number of elements in columns as row number 

Output:
1 
2 2 
3 3 3 
4 4 4 4 
5 5 5 5 5 



1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5 


Right angle triange->Inversion
Output:
1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5 
1 2 3 4 5 6 
1 2 3 4 5 6 7 
1 2 3 4 5 6 7 8 




New pattern->
Output:
1 2 3 4 5 6 7 8
1 2 3 4 5 6 7 
1 2 3 4 5 6 
1 2 3 4 5 
1 2 3 4 
1 2 3 
1 2
1

import java.util.Scanner;
public class Main {
    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);
        
        //row number 
        int rows=sc.nextInt();//5
      
      
      //min->nested for loop ->iteration i=1 j will run for 5 times->1
    //  rows->5->j=1 to 5
        // i->4 ->j=1 to 4
        // i->3->j=1 to 3
        // i->2->j=1 to 2 
        // i->1->j=1 to 1
      for(int i= rows;i>=1;i--){
          for(int j=1;j<=i;j++){
              System.out.print(j+" ");
          }
          System.out.println();//cursor will move to next line
      }
    }
}

// it will triangle pattern->we will have same number of elements in columns as row number 
// New pattern->
// Output:
// 1 2 3 4 5 6 7 8
// 1 2 3 4 5 6 7 
// 1 2 3 4 5 6 
// 1 2 3 4 5 
// 1 2 3 4 
// 1 2 3 
// 1 2
// 1


5 4 3 2 1 
5 4 3 2 
5 4 3 
5 4 
5 


Output:
Input:7->Inversion of same
1
2 1
3 2 1
4 3 2 1
5 4 3 2 1
6 5 4 3 2 1
7 6 5 4 3 2 1

Hint->Use min-2 loop
refer 2nd patter and 4 th pattern



Input:
rows->Here ,you need 2 loop with extra variable k=1;
1
2 3
4 5 6 
7 8 9 10
 


Interview:


